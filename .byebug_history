c
imap.search(["RECENT"])
imap.search(["RECENT","hi","NOT","NEW"])
message=imap.search(["ALL","rajat","NOT","NEW"])
message=imap.search(["ALL"])
imap.search(["ALL"])
imap.fetch(94, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.search(["SUBJECT","BODY","rajat"])
imap.fetch(98, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.fetch(98, 'BODY[HEADER.FIELDS (TO)]').to_s.split("{").second.chop
imap.fetch(98, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.search(["BODY","hi","NOT","NEW"])
imap.search(["BODY","rajat1","NOT","NEW"])
imap.search(["BODY","rajat1","NEW"])
imap.search(["BODY","rajat1"])
imap.search(["BODY","to","REAS"])
imap.fetch(102, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (BCC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (FROM)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (TO)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS ()]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(36, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(94, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(94, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.search(["BODY","rajat1","READ"])
imap.search(["BODY","rajat1","REAS"])
imap.search(["BODY","rajat1","LATEST"])
imap.search(["BODY","rajat1","NEW"])
imap.search(["BODY","trello","NEW"])
imap.search(["BODY","trello","NOT","NEW"])
imap.search([s1])
n
c
imap.search(["SUBJECT","code","NOT","NEW"])
mail = Mail.read_from_string body
body=imap.fetch(49,'RFC822')[0].attr['RFC822']
imap.search(["SUBJECT","code","NOT","NEW"])
imap.search(["SUBJECT","rajat","NOT","NEW"])
imap.search(["SUBJECT","rajat2","NOT","NEW"])
mail = Mail.rea
body=imap.fetch(102,'RFC822')[0].attr['RFC822']
imap.search(["to","prem","NOT","NEW"])
imap.search(["to","prem","NEW"])
imap.search(["to","prem"])
mail.subject
mail = Mail.read_from_string body
body=imap.fetch(all_mail_id[0],'RFC822')[0].attr['RFC822']
imap.search(["to","prem"])
n
auth.info.expires_At
auth
au
c
body = imap.fetch(36,'S[TEXT]')[0].attr['SUBJECT[TEXT]'
body = imap.fetch(36,'SUBJECT[TEXT]')[0].attr['SUBJECT[TEXT]']
Mail.read_from_string body
body = imap.fetch(36,'BODY[TEXT]')[0].attr['BODY[TEXT]']
imap.search(["TO","prem"])
imap.search("TO","prem")
imap.search([s1])
n
nn
n
c
imap.search(["to", "shivani","NOT" ,"NEW"])
imap.search(["to", "rahul","NOT" ,"NEW"])
imap.search(["BCC", "prem","NOT" ,"NEW"])
imap.search(["BCC", "rajat","NOT" ,"NEW"])
imap.search(["SUBJECT", "rajat2","NOT" ,"NEW"])
imap.search(["BCC", "rajat","NOT" ,"NEW"])
imap.search(["CC", "rahul","NOT" ,"NEW"])
imap.search(["BCC", "rahul","NOT" ,"NEW"])
imap.search(["CC", "prem","NOT" ,"NEW"])
imap.search(["SUBJECT", "prem","NOT" ,"NEW"])
imap.search(["SUBJECT", "prem", ,"NEW"])
imap.search(["SUBJECT", "prem", "NEW"])
imap.search(["to", "navpreet", "NEW"])
imap.search(["SUBJECT", "trello", "NEW"])
imap.search(["SUBJECT", "trello", "NOT", "NEW"])
imap.search(["SUBJECT", "trello", "NOT", "RAJ"])
imap.search(["SUBJECT", "trello", "NOT", "NEW"])
imap.search(["SUBJECT", "trello", "RAJAT", "NEW"])
imap.search(["SUBJECT", "trello", "Rajat", "NEW"])
imap.search(["SUBJECT", "trello", "rajat", "NEW"])
imap.search(["SUBJECT", "trello", "NOT", "NEW"])
imap.search(["SUBJECT", "hello", "NOT", "NEW"])
imap.search(["from", "trello","rajat"])
imap.search(["from", "trello"])
imap.search(["subject", "trello"])
imap.search(["to", "trello"])
imap.search(["BCC", "trello"])
imap.search(["BCC", "rajat"])
imap.search(["CC", "rajat"])
imap.search(["TO", "rajat"])
imap.search(["TO", "rajat",  "trello"])
imap.search(["SUBJECT", "hello", "NOT", "NEW"])
imap.search(["ALL", "rajat",  "trello"])
imap.search(["SUBJECT", "rajat",  "trello"])
imap.search(["SUBJECT", "rajat" , "trello"])
imap.search(["SUBJECT", "rajat"])
imap.search(["SUBJECT", "rajat", "trell", "codeace"])
imap.search(["SUBJECT", "rajat", "trello", "codeacedamy"])
imap.search(["SUBJECT", "hello", "NOT", "NEW"])
imap.search(["SUBJECT","rajat","trello","codeacedamy"])
imap.search(["SUBJECT","rajat","trello"])
imap.search(["SUBJECT","rajat"])
imap.search(["SUBJECT",s1])
mailbox_array.grep(/inbox/)
mailbox_array.grep(/INBOX/)
mailbox_array.grep(/inbox/)
mailbox_array.grep(/Sent/)
 mailbox_array = imap.list('','*').collect{ |mailbox| mailbox.name }
 mailbox_array = @imap.list('','*').collect{ |mailbox| mailbox.name }
mailbox_array.grep(/Sent/)
imap.search([s1])
n
c
n
c
n
nn
n
c
envelope = imap.fetch(1845, "ENVELOPE")
envelope = imap.fetch(1841, "ENVELOPE")
search_result = imap.search(["subject", "newgen"])
search_result = imap.search(["BODY", "shruti"])
search_result = imap.search(["BODY", "newgen"])
search_result = imap.search(["BODY", "hello"])
fetch_result = fetch_thread.id
fetch_result = fetch_thread.value
n
c
n
c
fetch_thread.value
fetch_thread = Thread.start { imap.fetch(1..23, "UID") }
fetch_thread.value
fetch_thread
fetch_thread.public_send
fetch_thread.instance_exec
fetch_thread.methods.sort
fetch_thread = Thread.start { imap.fetch(1..23, "UID") }
fetch_thread
fetch_thread[0]
fetch_thread
search_result = fetch_thread.search(["BODY", "hello"])
fetch_thread
fetch_result = fetch_thread.value[0]
fetch_result[] = fetch_thread.value
fetch_result {} = fetch_thread.value
fetch_result = fetch_thread.value
imap.search(["BODY", "hello"])
fetch_thread = Thread.start { imap.fetch(1..-1, "UID") }
mail
from = mail.from 
mail.body
mail.html_part.body.to_s
mail.text_part.body
mail.text_part.body.to_s
mail = Mail.read_from_string body
 body=imap.fetch(all_mail_id[4],'RFC822')[0].attr['RFC822']
mail = Mail.read_from_string body
 body=imap.fetch(all_mail_id[0],'RFC822')[0].attr['RFC822']
mail.text_part.body.to_s
mail = Mail.read_from_string body
mail = Mail.read_from_string msg
body=imap.fetch(all_mail_id[0],'RFC822')[0].attr['RFC822']
body
body = imap.fetch(all_mail_id[0],'BODY[TEXT]')[0].attr['BODY[TEXT]']
imap.search ["HEADER", "MESSAGE-ID",  all_mail_id[0]]
imap.search ["HEADER", "MESSAGE-ID", target]
 envelope.attr
 envelope.mailbo
 envelope.body
 envelope = imap.fetch(all_mail_id[0], "ENVELOPE")
 envelope
 envelope.body
n
c
envelope.methods.sort
envelope.subject
envelope
n
c
id = imap.search(["ALL"])
imap.search("[Gmail]/All Mail")
imap.select("[Gmail]/All Mail")
id = imap.examine('INBOX')
id = imap.examine(["INBOX"])
id = imap.search(["INBOX"])
id = imap.search(["UNSEEN"])
id
imap.search(["INBOX"])
imap.search(["RECENT"])
message_id
imap.examine('INBOX')
n
c
 c = imap.search(["SUBJECT", "Hi Rajat! The 3 for 999 SALE is back!", "Exclusive All India Entrance Test for Embedded Systems Training - 13th Aug 2017"])
n
nn
n
c
 c = imap.search(["SUBJECT", "Hi Rajat! The 3 for 999 SALE is back!","Exclusive All India Entrance Test for Embedded Systems Training - 13th Aug 2017"])
n
c
c = imap.search(["SUBJECT", "Hi Rajat! The 3 for 999 SALE is back!"])
n
c
imap.authenticate('XOAUTH2', 'prem.saha@untroddenlabs.com', user.oauth_token)
c
   c=imap.search(["SUBJECT", "shankar sent you a new message", "NEW"])
n
c
  c=imap.search(["SUBJECT", "[Refer Me_QA] Foundation Level Agile Tester Certification", "NEW"])
n
c
  c=imap.search(["SUBJECT", "oauth api connected to your Google Account", "NEW"])
n
c
c=imap.search(["SUBJECT", "oauth api connected to your Google Account", "NEW"])
 envelope = imap.fetch(c, "ENVELOPE")
n
c
envelope = imap.fetch(c, "ENVELOPE")
c=imap.search(["SUBJECT", "Why Rejection Is Good For You", "NOT", "NEW"])
n
c
 envelope = imap.fetch(c, "ENVELOPE")
 c=imap.search(["SUBJECT", "Why Rejection Is Good For You", "NOT", "NEW"])
 imap.select("[Gmail]/All Mail")
xmessages_count = imap.status('INBOX', ['MESSAGES'])['MESSAGES']
c=imap.search(["SUBJECT", "Why Rejection Is Good For You", "NOT", "NEW"])
imap.authenticate('XOAUTH2', 'mayank.chandel@untroddenlabs.com', user.oauth_token)
c
 imap.status('INBOX', ['MESSAGES'])['MESSAGES']
 imap.authenticate('XOAUTH2', 'mayank.chandel@untroddenlabs.com', user.oauth_token)
 user.oauth_token
c
n
imap.status('INBOX', ['MESSAGES'])['MESSAGES']
iimap.status('INBOX', ['MESSAGES'])['MESSAGES']
imap.authenticate('XOAUTH2', 'rajatgpt77@gmail.com', user.oauth_token)
c
imap.authenticate('XOAUTH2', 'rajatgpt77@gmail.com', user.oauth_token)
c
 auth.credentials.token
c auth.credentials.token
c
n
user.oauth_token
c
