c
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
n
c
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
n
imap.search(["body", "rajat23","NOT","NEW"])
imap.search(["SUBJECT", "rajat23","NOT","NEW"])
ImapMessage.find(:first, :conditions => ["username = ? and from = ? ", "prem.saha@untroddenlabs.com", "prem"])
imap.search(["OR", "FROM", "prem.saha@untroddenlabs.com", "TO", "navpreet@untroddenlabs.com"])
n
xmessages_count
n
imap
imap.search(["SUBJECT", "rajat23","NOT","NEW"])
user_id=imap.uid_search(["SUBJECT", "rajat23","NOT","NEW"])
n
c
n
c
auth
c
auth.credentials.token
auth.credentials
auth.info.token
auth.info
auth.token
auth.refresh_token
auth.value
auth
n
c
n
c
type.downcase.to_sym
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
n
cn
@imap.search(["BODY", text, "NOT", "NEW" ])
@imap.search(["SUBJECT", text, "NOT", "NEW" ])
@imap.search("SUBJECT", text, "NOT", "NEW" ])
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
c
t.display_message_id
@imap
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
n
c
@imap.search(["BODY", text, "NOT", "NEW" ])
@imap.search("BODY", text, "NOT", "NEW" ])
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
n
c
@imap.search([hash[type.downcase.to_sym], text, "NOT", "NEW" ])
@imap
@impa
n
c
n
cn
[hash[type.downcase.to_sym]]
[hash[type.downcase.to_sym]
n
c
type.downcase.to_sym
type="hjhj"
type.downcase.to_sym
type.to_sym
type.sym
body.to_sym.downcase
body.downcase.to_sym
type.to_sym
type.constantize
type.constantie
type
body.constantize
"subject".constantize
body.constantize
":body".constantize
"body".constantize
type
hash = {subject: "SUBJECT", to: "TO", from: "FROM", cc: "C" , body: "BODY"}
type.constantize
'House::Owns'.constantize
type.constantize
hash[:body]
:body
body
hash = {subject: "SUBJECT", to: "TO", from: "FROM", cc: "C" , body: "BODY"}
type.constantize
hash[type.downcase.constantize]
type.downcase.constantize
hash[:type.downcase.constantize]
hash[type.downcase.constantize]
type
hash[:body]
hash[:type]
hash = {subject: "SUBJECT", to: "TO", from: "FROM", cc: "C" , body: "BODY"}
hash = {subject "SUBJECT", to: "TO", from: "FROM", cc: "C" , body: "BODY"}
hash[:type]
hash[type]
hash[:subject]
hash[subject]
hash = {subject: "SUBJECT", to: "TO", from: "FROM", cc: "C" , body: "BODY"}
hash = {subject: "SUBJECT", to: "TO", from: "FROM", cc: "C"' , body: "BODY"}
hash = {subject: 'SUBJECT', to: 'TO', from: 'FROM', cc: 'CC' , body: 'BODY'}
hash['to']
hash['subject']
hash["body"]
hash[body]
type
hash[type.downcase]
hash{body}
hash[body]
n
c
@imap.search(["SUBJECT","hi","NOT","NEW"])
@imap
hash[type.downcase]
hash[type.downcase]="rohan"
hash[type.downcase]
hash[type.downcase]="rajat"
hash[type.downcase]
[hash[type.downcase]
 @imap.search([hash[type.downcase], text, "NOT", "NEW" ])
  hash = {subject: 'SUBJECT', to: 'TO', from: 'FROM', cc: 'CC' , body: 'BODY'}
type
c
  hash = {subject: 'SUBJECT', to: 'TO', from: 'FROM', cc: 'CC' , body: 'BODY'}
   @imap.search([hash[type.lowercase().constantize], text, "NOT", "NEW" ])
type
c
cc
c
n
 return "Error in Auth Token or email: #{e}"
e
all_mail_id
c
all_mail_id
aall_mail_id
c
e
puts e
e
c
n
c
e
c
auth.info.email
auth
c
auth.info.email
auth.info.name
auth
email
c
email
n
c
auth.info.email
auth.info.name
n
c
auth.info.name
auth.email
auth.info
cauth.info
c
n
 search_result = imap.search(["OR", "FROM", "prem.saha@untroddenlabs.com", "TO", "navpreet@untroddenlabs.com"])
n
c
search_result = imap.search(["OR", "FROM", "prem.saha@untroddenlabs.com", "TO", "navpreet@untroddenlabs.com"])
search_result = imap.search(["OR", "FROM", "from-lookup-email@gmail.com", "TO", "to-lookup-email@gmail.com"])
imap.search(["FROM", "space@nasa.com", "SUBJECT", "life on mars", "OR", "life on venus", "NOT", "life on earth"])
n
c
imap.search(["RECENT"])
imap.search(["RECENT","hi","NOT","NEW"])
message=imap.search(["ALL","rajat","NOT","NEW"])
message=imap.search(["ALL"])
imap.search(["ALL"])
imap.fetch(94, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.search(["SUBJECT","BODY","rajat"])
imap.fetch(98, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.fetch(98, 'BODY[HEADER.FIELDS (TO)]').to_s.split("{").second.chop
imap.fetch(98, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.search(["BODY","hi","NOT","NEW"])
imap.search(["BODY","rajat1","NOT","NEW"])
imap.search(["BODY","rajat1","NEW"])
imap.search(["BODY","rajat1"])
imap.search(["BODY","to","REAS"])
imap.fetch(102, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (BCC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (CC)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (FROM)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (TO)]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS ()]').to_s.split("{").second.chop
imap.fetch(102, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(36, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(94, 'BODY[HEADER.FIELDS (BODY)]').to_s.split("{").second.chop
imap.fetch(94, 'BODY[HEADER.FIELDS (SUBJECT)]').to_s.split("{").second.chop
imap.search(["BODY","rajat1","READ"])
imap.search(["BODY","rajat1","REAS"])
imap.search(["BODY","rajat1","LATEST"])
imap.search(["BODY","rajat1","NEW"])
imap.search(["BODY","trello","NEW"])
imap.search(["BODY","trello","NOT","NEW"])
imap.search([s1])
n
c
imap.search(["SUBJECT","code","NOT","NEW"])
mail = Mail.read_from_string body
body=imap.fetch(49,'RFC822')[0].attr['RFC822']
imap.search(["SUBJECT","code","NOT","NEW"])
imap.search(["SUBJECT","rajat","NOT","NEW"])
imap.search(["SUBJECT","rajat2","NOT","NEW"])
mail = Mail.rea
body=imap.fetch(102,'RFC822')[0].attr['RFC822']
imap.search(["to","prem","NOT","NEW"])
imap.search(["to","prem","NEW"])
imap.search(["to","prem"])
mail.subject
mail = Mail.read_from_string body
body=imap.fetch(all_mail_id[0],'RFC822')[0].attr['RFC822']
imap.search(["to","prem"])
n
auth.info.expires_At
auth
au
c
body = imap.fetch(36,'S[TEXT]')[0].attr['SUBJECT[TEXT]'
body = imap.fetch(36,'SUBJECT[TEXT]')[0].attr['SUBJECT[TEXT]']
Mail.read_from_string body
body = imap.fetch(36,'BODY[TEXT]')[0].attr['BODY[TEXT]']
imap.search(["TO","prem"])
imap.search("TO","prem")
imap.search([s1])
n
nn
n
c
imap.search(["to", "shivani","NOT" ,"NEW"])
imap.search(["to", "rahul","NOT" ,"NEW"])
imap.search(["BCC", "prem","NOT" ,"NEW"])
imap.search(["BCC", "rajat","NOT" ,"NEW"])
imap.search(["SUBJECT", "rajat2","NOT" ,"NEW"])
imap.search(["BCC", "rajat","NOT" ,"NEW"])
imap.search(["CC", "rahul","NOT" ,"NEW"])
imap.search(["BCC", "rahul","NOT" ,"NEW"])
imap.search(["CC", "prem","NOT" ,"NEW"])
imap.search(["SUBJECT", "prem","NOT" ,"NEW"])
imap.search(["SUBJECT", "prem", ,"NEW"])
imap.search(["SUBJECT", "prem", "NEW"])
